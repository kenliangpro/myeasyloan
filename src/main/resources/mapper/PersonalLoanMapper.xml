<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyloan.dao.PersonalLoanMapper">
  <resultMap id="BaseResultMap" type="com.easyloan.bean.PersonalLoan">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="loan_amount" jdbcType="INTEGER" property="loanAmount" />
    <result column="loan_tern" jdbcType="INTEGER" property="loanTern" />
    <result column="loan_deadline" jdbcType="DATE" property="loanDeadline" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="addr" jdbcType="VARCHAR" property="addr" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="datum_id" jdbcType="VARCHAR" property="datumId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, loan_amount, loan_tern, loan_deadline, create_time, addr, status, datum_id, user_id
  </sql>
  <select id="selectByExample" parameterType="com.easyloan.bean.PersonalLoanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from loan_personal_loan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from loan_personal_loan
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from loan_personal_loan
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.easyloan.bean.PersonalLoanExample">
    delete from loan_personal_loan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.easyloan.bean.PersonalLoan">
    insert into loan_personal_loan (id, loan_amount, loan_tern, 
      loan_deadline, create_time, addr, 
      status, datum_id, user_id
      )
    values (#{id,jdbcType=VARCHAR}, #{loanAmount,jdbcType=INTEGER}, #{loanTern,jdbcType=INTEGER}, 
      #{loanDeadline,jdbcType=DATE}, #{createTime,jdbcType=DATE}, #{addr,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{datumId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.easyloan.bean.PersonalLoan">
    insert into loan_personal_loan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loanAmount != null">
        loan_amount,
      </if>
      <if test="loanTern != null">
        loan_tern,
      </if>
      <if test="loanDeadline != null">
        loan_deadline,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="addr != null">
        addr,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="datumId != null">
        datum_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="loanAmount != null">
        #{loanAmount,jdbcType=INTEGER},
      </if>
      <if test="loanTern != null">
        #{loanTern,jdbcType=INTEGER},
      </if>
      <if test="loanDeadline != null">
        #{loanDeadline,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="addr != null">
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="datumId != null">
        #{datumId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.easyloan.bean.PersonalLoanExample" resultType="java.lang.Long">
    select count(*) from loan_personal_loan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update loan_personal_loan
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.loanAmount != null">
        loan_amount = #{record.loanAmount,jdbcType=INTEGER},
      </if>
      <if test="record.loanTern != null">
        loan_tern = #{record.loanTern,jdbcType=INTEGER},
      </if>
      <if test="record.loanDeadline != null">
        loan_deadline = #{record.loanDeadline,jdbcType=DATE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.addr != null">
        addr = #{record.addr,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.datumId != null">
        datum_id = #{record.datumId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update loan_personal_loan
    set id = #{record.id,jdbcType=VARCHAR},
      loan_amount = #{record.loanAmount,jdbcType=INTEGER},
      loan_tern = #{record.loanTern,jdbcType=INTEGER},
      loan_deadline = #{record.loanDeadline,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=DATE},
      addr = #{record.addr,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      datum_id = #{record.datumId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.easyloan.bean.PersonalLoan">
    update loan_personal_loan
    <set>
      <if test="loanAmount != null">
        loan_amount = #{loanAmount,jdbcType=INTEGER},
      </if>
      <if test="loanTern != null">
        loan_tern = #{loanTern,jdbcType=INTEGER},
      </if>
      <if test="loanDeadline != null">
        loan_deadline = #{loanDeadline,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="addr != null">
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="datumId != null">
        datum_id = #{datumId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.easyloan.bean.PersonalLoan">
    update loan_personal_loan
    set loan_amount = #{loanAmount,jdbcType=INTEGER},
      loan_tern = #{loanTern,jdbcType=INTEGER},
      loan_deadline = #{loanDeadline,jdbcType=DATE},
      create_time = #{createTime,jdbcType=DATE},
      addr = #{addr,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      datum_id = #{datumId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>